name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker images to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Flask image to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: stepaxvii/flask_app:latest
          file: Dockerfile.flask

      - name: Push Bot image to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: stepaxvii/bot_app:latest
          file: Dockerfile.bot

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Copy docker-compose.production.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY  }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "app"
          debug: true

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY  }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e
            echo "Проверка текущей директории"
            pwd
            echo "Содержимое директории"
            ls -al
            echo "Проверка доступных Docker образов"
            sudo docker images
            # Переходим в директорию с проектом
            cd /home/GuestAnalytics
            echo "Переход в директорию GuestAnalytics"
            ls -al
            echo "Запуск pull образов с Docker Hub"
            sudo docker compose -f docker-compose.production.yml pull || { echo 'Ошибка при pull Docker образов'; exit 1; }
            echo "Перезапуск контейнеров"
            sudo docker compose -f docker-compose.production.yml down || { echo 'Ошибка при остановке контейнеров'; exit 1; }
            sudo docker compose -f docker-compose.production.yml up -d || { echo 'Ошибка при запуске контейнеров'; exit 1; }
            echo "Ожидание 5 секунд для загрузки базы данных"
            sleep 5

            # Очистка неиспользуемых Docker образов
            echo "Очистка неиспользуемых Docker образов"
            sudo docker image prune -af || { echo 'Ошибка при очистке неиспользуемых Docker образов'; exit 1; }

            # Выполнение миграций Alembic
            echo "Запуск миграций базы данных с помощью Alembic"
            sudo docker exec flask_app alembic upgrade head || { echo 'Ошибка при выполнении миграций Alembic'; exit 1; }

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Деплой обновлённой версии GuestAnal выполнен.
