services:
  db:
    container_name: postgres_db
    image: postgres:13.10-alpine
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
    logging:
      driver: "json-file"  # Логирование в json
      options:
        max-size: "10m"  # Максимальный размер лог-файла
        max-file: "3"    # Максимальное количество лог-файлов

  flask:
    image: stepaxvii/flask_app:latest
    container_name: flask_app
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend
    logging:
      driver: "json-file"  # Логирование в json
      options:
        max-size: "10m"  # Максимальный размер лог-файла
        max-file: "3"    # Максимальное количество лог-файлов

  bot:
    image: stepaxvii/bot_app:latest
    container_name: bot_app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend
    logging:
      driver: "json-file"  # Логирование в json
      options:
        max-size: "10m"  # Максимальный размер лог-файла
        max-file: "3"    # Максимальное количество лог-файлов

volumes:
  pg_data:

networks:
  backend:
    driver: bridge
